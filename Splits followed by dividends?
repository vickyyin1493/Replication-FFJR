 ---
title: "Splits followed by dividends?"
author: Jade & Vicky
format: html
bibliography: book.bib
---

We used monthly data on announcement dates from 1990 to 2022 to analyse whether splits are followed by dividends more often than not.
We found that in 1199 (75.3%) cases, it is true while in 393 (24.7%) cases it is false.

```{r}
#| include: false
library(DBI)
library(dplyr, warn.conflicts = FALSE)
library(dbplyr)      # For window_order
library(tidyr)       # For nest and unnest
library(purrr)       # For map, map2
library(ggplot2)
```

## Replication of FFJR

```{r}
#| include: false
pg <- dbConnect(RPostgres::Postgres(), bigint = "integer")

rs <- dbExecute(pg, "SET search_path TO crsp")
msf <- tbl(pg, "msf")
msi <- tbl(pg, "msi")
stocknames <- tbl(pg, "stocknames")
dsedist <- tbl(pg, "dsedist")
```

```{r}
#| include: false
splits <-
  dsedist %>%
  filter(dclrdt >= "1990-01-01", dclrdt <= "2022-12-31",
         distcd %in% c(5523L, 5533L),
         facshr >= 0.25) %>%
  mutate(split = TRUE) %>%
  select(permno, split, dclrdt, facshr) 
```


```{r}
#| include: false
nyse_stocks <-
  stocknames %>%
  filter(exchcd == 1,
         substr(as.character(shrcd), 1L, 1L) == "1") %>%
  select(permno, namedt, nameenddt) 
```

```{r}
#| include: false
nyse_splits_raw <-
  splits %>%
  inner_join(nyse_stocks, by = "permno") %>%
  filter(dclrdt >= namedt, dclrdt <= nameenddt) 
```  

```{r}
#| include: false
month_indexes <-
  msi %>%
  mutate(month = as.Date(date_trunc('month', date))) %>%
  window_order(month) %>%
  mutate(month_index = row_number()) %>%
  select(date, month, month_index)
```
  
```{r nyse_splits}
#| include: false
nyse_splits <-
  nyse_splits_raw %>%
  mutate(month = as.Date(date_trunc('month', dclrdt))) %>%
  inner_join(month_indexes, by = "month") %>%
  rename(ex_month_index = month_index) %>%
  select(-namedt, -nameenddt, -date) %>%
  collect()
```

We construct `nyse_msf`, which is essentially `crsp.msf` restricted to NYSE stocks and months with non-missing returns, and with the added variable `month_index`.

```{r nyse_msf}
#| include: false
nyse_msf <-
  msf %>%
  filter(!is.na(ret)) %>%
  inner_join(nyse_stocks, by = "permno") %>%
  filter(between(date, namedt, nameenddt)) %>%
  inner_join(month_indexes, by = "date") %>%
  select(permno, month_index, date, ret) %>%
  collect()
```

The following code merges data on splits from `nyse_splits` with data on returns from `nyse_msf`.
We create a variable (`month_rel_ex`) that measures the number of months between the split and the return.

```{r}
#| include: false
split_return_data <-
  nyse_splits %>%
  left_join(nyse_msf, by = "permno") %>%
  mutate(month_rel_ex = month_index - ex_month_index) %>%
  select(permno, dclrdt, date, ret, month_rel_ex)
```

```{r}
#| include: false
split_sample <-
  split_return_data %>%
  filter(between(month_rel_ex, -12, 12)) %>%
  group_by(permno, dclrdt) %>%
  summarize(n_obs = n(), .groups = "drop") %>%
  filter(n_obs == 25L) %>%
  select(permno, dclrdt)

split_returns <-
  split_return_data %>%
  semi_join(split_sample, by = c("permno")) 
```

```{r}
#| include: false
split_sample %>% distinct(permno) %>% count()
split_sample %>% count()
```

```{r}
#| include: false
index_returns <-
  msi %>%
  select(date, vwretd, ewretd) %>%
  collect()
```

```{r}
#| include: false
omit_returns <-
  split_returns %>%
  mutate(exclude = between(month_rel_ex, -15, 0)) %>%
  group_by(permno, date) %>%
  summarize(exclude = any(exclude), .groups = "drop")
```

```{r}
#| include: false
split_returns_reg <-
  split_returns %>%
  inner_join(omit_returns, by = c("permno", "date")) %>%
  select(permno, date, ret, exclude) %>%
  distinct() 
```

```{r}
#| include: false
abnormal_returns <-
  split_returns_reg %>%
  left_join(index_returns, by = "date") %>%
  mutate(lpr = log(1 + ret),
         lm = log(1 + vwretd)) %>%
  select(permno, date, lpr, lm, exclude) %>%
  nest(data = !permno) %>%
  mutate(fit = map(data, ~ lm(lpr ~ lm, data = ., subset = !exclude,
                              na.action = "na.exclude"))) %>%
  mutate(predicted = map2(fit, data, ~ predict(.x, newdata = .y))) %>%
  unnest(cols = c(predicted, data)) %>%
  mutate(resid = lpr - predicted) %>%
  select(permno, date, resid)
```

```{r}
#| include: false
table2_data <-
  abnormal_returns %>%
  inner_join(collect(month_indexes), by = "date") %>%
  left_join(nyse_splits, by = "permno") %>%
  mutate(month_gap = month_index - ex_month_index) %>%
  filter(abs(month_gap) <= 30)
```

```{r}
#| include: false
table2_data %>%
  group_by(month_gap) %>%
  summarize(all_u = mean(resid), .groups = "drop") %>%
  arrange(month_gap) %>%
  mutate(all_U = cumsum(all_u)) %>%
  ggplot(aes(x = month_gap, y = all_U)) +
  geom_point()
```

### Data on dividends

```{r}
#| include: false
div_months <-
  dsedist %>%
  filter(substr(as.character(distcd), 1L, 1L) == "1") %>%
  mutate(month = as.Date(date_trunc('month', dclrdt))) %>%
  group_by(permno, month) %>%
  summarize(divamt = sum(divamt, na.rm = TRUE), .groups = "drop")
```


```{r nyse_divs_raw}
#| include: false
nyse_divs_raw <-
  msf %>%
  inner_join(nyse_stocks, by = "permno") %>%
  filter(between(date, namedt, nameenddt)) %>%
  mutate(month = as.Date(date_trunc('month', date))) %>%
  select(permno, date, month, cfacshr) %>%
  left_join(div_months, by = c("permno", "month")) %>%
  mutate(divamt = coalesce(divamt/cfacshr, 0)) %>%
  select(permno, month, divamt)
```

```{r nyse_divs}
#| include: false
nyse_divs <-
  nyse_divs_raw %>%
  group_by(permno) %>%
  window_order(month) %>%
  window_frame(from = -11, to = 0) %>%
  mutate(div_trailing = sum(divamt, na.rm = TRUE),
         mths_trailing = sum(1, na.rm = TRUE)) %>%
  window_frame(from = 1, to = 12) %>%
  mutate(div_forward = sum(divamt, na.rm = TRUE),
         mths_forward = sum(1, na.rm = TRUE)) %>%
  filter(mths_trailing == 12, mths_forward == 12) %>%
  ungroup() %>%
  select(permno, month, div_trailing, div_forward) %>%
  collect()
```

```{r split_firm_dividends}
#| include: false
split_firm_dividends <-
  nyse_splits %>%
  left_join(nyse_divs, by = c("permno", "month")) %>%
  mutate(div_ratio = if_else(div_trailing > 0, div_forward/div_trailing,
                             NA_real_)) %>%
  filter(!is.na(div_ratio)) %>%
  select(permno, month, dclrdt, div_ratio) 
```

```{r}
#| include: false
div_mkt <-
  nyse_divs %>% 
  group_by(month) %>% 
  summarize(div_trailing = mean(div_trailing, na.rm = TRUE),
            div_forward = mean(div_forward, na.rm = TRUE),
            .groups = "drop") %>%
  mutate(mkt_div_ratio = if_else(div_trailing > 0, div_forward/div_trailing,
                                 NA_real_))

dividends_file <-
  split_firm_dividends %>%
  inner_join(div_mkt, by = "month") %>%
  select(permno, dclrdt, div_ratio, mkt_div_ratio) %>% 
  mutate(up_div = div_ratio >= mkt_div_ratio)
```

```{r}
#| include: false
table2_w_divs <- 
  table2_data %>%
  left_join(dividends_file, by = c("permno", "dclrdt"))
```

```{r}
#| include: false
table2_w_divs %>%
  filter(up_div) %>%
  group_by(month_gap) %>%
  summarize(u = mean(resid), .groups = "drop") %>%
  arrange(month_gap) %>%
  mutate(U = cumsum(u)) %>%
  ggplot(aes(x = month_gap, y = U)) +
  geom_point()
```

```{r}
#| include: false
table2_w_divs %>%
  filter(!up_div) %>%
  group_by(month_gap) %>%
  summarize(u = mean(resid), .groups = "drop") %>%
  arrange(month_gap) %>%
  mutate(U = cumsum(u)) %>%
  ggplot(aes(x = month_gap, y = U)) +
  geom_point()
```

```{r}
table2_w_divs %>% 
  filter(month_gap == 0, !is.na(up_div)) %>%
  count(up_div)
```
